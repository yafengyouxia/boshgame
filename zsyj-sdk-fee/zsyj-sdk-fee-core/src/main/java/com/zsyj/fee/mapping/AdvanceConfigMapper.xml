<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zsyj.fee.dao.AdvanceConfigMapper" >
  <resultMap id="BaseResultMap" type="com.zsyj.fee.entity.AdvanceConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="spid" property="spid" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="VARCHAR" />
    <result column="province_code" property="provinceCode" jdbcType="VARCHAR" />
    <result column="percent" property="percent" jdbcType="TINYINT" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="use_myselft" property="useMyselft" jdbcType="TINYINT" />
    <result column="close_hour" property="closeHour" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="maxcount" property="maxcount" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="start_count" property="startCount" jdbcType="INTEGER" />
    <result column="start_percent" property="startPercent" jdbcType="TINYINT" />
    <result column="end_count" property="endCount" jdbcType="INTEGER" />
    <result column="end_percent" property="endPercent" jdbcType="TINYINT" />
    <result column="account_type" property="accountType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, spid, cid, province_code, percent, updatetime, use_myselft, close_hour, status, 
    maxcount, remark, start_count, start_percent, end_count, end_percent, account_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zsyj.fee.entity.AdvanceConfigCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from advance_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from advance_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from advance_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsyj.fee.entity.AdvanceConfigCondition" >
    delete from advance_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsyj.fee.entity.AdvanceConfig" >
    insert into advance_config (id, spid, cid, 
      province_code, percent, updatetime, 
      use_myselft, close_hour, status, 
      maxcount, remark, start_count, 
      start_percent, end_count, end_percent, 
      account_type)
    values (#{id,jdbcType=INTEGER}, #{spid,jdbcType=VARCHAR}, #{cid,jdbcType=VARCHAR}, 
      #{provinceCode,jdbcType=VARCHAR}, #{percent,jdbcType=TINYINT}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{useMyselft,jdbcType=TINYINT}, #{closeHour,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{maxcount,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{startCount,jdbcType=INTEGER}, 
      #{startPercent,jdbcType=TINYINT}, #{endCount,jdbcType=INTEGER}, #{endPercent,jdbcType=TINYINT}, 
      #{accountType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zsyj.fee.entity.AdvanceConfig" >
    insert into advance_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="spid != null" >
        spid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="provinceCode != null" >
        province_code,
      </if>
      <if test="percent != null" >
        percent,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="useMyselft != null" >
        use_myselft,
      </if>
      <if test="closeHour != null" >
        close_hour,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="maxcount != null" >
        maxcount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="startCount != null" >
        start_count,
      </if>
      <if test="startPercent != null" >
        start_percent,
      </if>
      <if test="endCount != null" >
        end_count,
      </if>
      <if test="endPercent != null" >
        end_percent,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="spid != null" >
        #{spid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null" >
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="percent != null" >
        #{percent,jdbcType=TINYINT},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="useMyselft != null" >
        #{useMyselft,jdbcType=TINYINT},
      </if>
      <if test="closeHour != null" >
        #{closeHour,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="maxcount != null" >
        #{maxcount,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="startCount != null" >
        #{startCount,jdbcType=INTEGER},
      </if>
      <if test="startPercent != null" >
        #{startPercent,jdbcType=TINYINT},
      </if>
      <if test="endCount != null" >
        #{endCount,jdbcType=INTEGER},
      </if>
      <if test="endPercent != null" >
        #{endPercent,jdbcType=TINYINT},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsyj.fee.entity.AdvanceConfigCondition" resultType="java.lang.Integer" >
    select count(*) from advance_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update advance_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.spid != null" >
        spid = #{record.spid,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceCode != null" >
        province_code = #{record.provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.percent != null" >
        percent = #{record.percent,jdbcType=TINYINT},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useMyselft != null" >
        use_myselft = #{record.useMyselft,jdbcType=TINYINT},
      </if>
      <if test="record.closeHour != null" >
        close_hour = #{record.closeHour,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.maxcount != null" >
        maxcount = #{record.maxcount,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.startCount != null" >
        start_count = #{record.startCount,jdbcType=INTEGER},
      </if>
      <if test="record.startPercent != null" >
        start_percent = #{record.startPercent,jdbcType=TINYINT},
      </if>
      <if test="record.endCount != null" >
        end_count = #{record.endCount,jdbcType=INTEGER},
      </if>
      <if test="record.endPercent != null" >
        end_percent = #{record.endPercent,jdbcType=TINYINT},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update advance_config
    set id = #{record.id,jdbcType=INTEGER},
      spid = #{record.spid,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=VARCHAR},
      province_code = #{record.provinceCode,jdbcType=VARCHAR},
      percent = #{record.percent,jdbcType=TINYINT},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      use_myselft = #{record.useMyselft,jdbcType=TINYINT},
      close_hour = #{record.closeHour,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      maxcount = #{record.maxcount,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      start_count = #{record.startCount,jdbcType=INTEGER},
      start_percent = #{record.startPercent,jdbcType=TINYINT},
      end_count = #{record.endCount,jdbcType=INTEGER},
      end_percent = #{record.endPercent,jdbcType=TINYINT},
      account_type = #{record.accountType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsyj.fee.entity.AdvanceConfig" >
    update advance_config
    <set >
      <if test="spid != null" >
        spid = #{spid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null" >
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="percent != null" >
        percent = #{percent,jdbcType=TINYINT},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="useMyselft != null" >
        use_myselft = #{useMyselft,jdbcType=TINYINT},
      </if>
      <if test="closeHour != null" >
        close_hour = #{closeHour,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="maxcount != null" >
        maxcount = #{maxcount,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="startCount != null" >
        start_count = #{startCount,jdbcType=INTEGER},
      </if>
      <if test="startPercent != null" >
        start_percent = #{startPercent,jdbcType=TINYINT},
      </if>
      <if test="endCount != null" >
        end_count = #{endCount,jdbcType=INTEGER},
      </if>
      <if test="endPercent != null" >
        end_percent = #{endPercent,jdbcType=TINYINT},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsyj.fee.entity.AdvanceConfig" >
    update advance_config
    set spid = #{spid,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=VARCHAR},
      percent = #{percent,jdbcType=TINYINT},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      use_myselft = #{useMyselft,jdbcType=TINYINT},
      close_hour = #{closeHour,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      maxcount = #{maxcount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      start_count = #{startCount,jdbcType=INTEGER},
      start_percent = #{startPercent,jdbcType=TINYINT},
      end_count = #{endCount,jdbcType=INTEGER},
      end_percent = #{endPercent,jdbcType=TINYINT},
      account_type = #{accountType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>