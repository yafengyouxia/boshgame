<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE configuration  
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-config.dtd">  
<configuration>  
      
    <!-- 读取数据连接参数 -->  
    <properties resource="config.properties" />  
  
    <settings>  
        <setting name="cacheEnabled" value="true" />  
        <setting name="lazyLoadingEnabled" value="false" />  
        <setting name="multipleResultSetsEnabled" value="true" />  
        <setting name="useColumnLabel" value="true" />  
        <setting name="useGeneratedKeys" value="false" />  
        <setting name="autoMappingBehavior" value="PARTIAL" />  
        <setting name="defaultExecutorType" value="SIMPLE" />  
        <setting name="defaultStatementTimeout" value="25" />  
        <setting name="safeRowBoundsEnabled" value="false" />  
        <setting name="mapUnderscoreToCamelCase" value="false" />  
        <setting name="localCacheScope" value="SESSION" />  
        <setting name="jdbcTypeForNull" value="OTHER" />  
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />  
    </settings>  
  
  
    <!-- 实体类别名设置 暂无，已被动态生成 -->  
    <typeAliases>  
    </typeAliases>
  
    <!-- 数据库连接环境配置 -->  
    <environments default="development">  
        <environment id="development">  
            <!-- JDBC – 这个配置直接简单使用了 JDBC 的提交和回滚设置。 它依赖于从数据源得 到的连接来管理事务范围。 -->  
            <transactionManager type="JDBC" />  
            <!-- MANAGED – 这个配置几乎没做什么。它从来不提交或回滚一个连接。 而它会让 容器来管理事务的整个生命周期(比如 Spring   
                或 JEE 应用服务器的上下文) 默认 情况下它会关闭连接。 然而一些容器并不希望这样, 因此如果你需要从连接中停止 它,将 closeConnection   
                属性设置为 false。   
                <transactionManager type="MANAGED">
                	<property name="closeConnection" value="false" /> 
                </transactionManager>
            -->
            <!-- UNPOOLED – 这个数据源的实现是每次被请求时简单打开和关闭连接。  
            POOLED – 这是 JDBC 连接对象的数据源连接池的实现,用来避免创建新的连接实例 时必要的初始连接和认证时间。这是一种当前 Web 应用程序用来快速响应请求很流行的方 法。  
            JNDI – 这个数据源的实现是为了使用如 Spring 或应用服务器这类的容器, 容器可以集 中或在外部配置数据源,然后放置一个 JNDI 上下文的引用。  
             -->
            <dataSource type="POOLED">  
                <property name="driver" value="com.mysql.jdbc.Driver" />  
                <property name="url" value="${dbMainUrl}" />
                <property name="username" value="${dbMainUserName}" />
                <property name="password" value="${dbMainPassword}" />  
            </dataSource>  
        </environment>  
    </environments>  

    <!-- mapping 文件路径配置 -->  
    <mappers>
    	<mapper resource="com/zsyj/fee/mapping/SdkTroneStrategyMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SdkStrategyMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SdkChannelStrategyMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgSdkTroneMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgAreaMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgCityMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgGroupMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgGroupSubMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgIvrsMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/LimitServicecodeMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgRoleMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgRoleBlackMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgSdkAppMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/cfgSdkCpMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgSmscenterMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgSpCompanyMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgSubMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/CfgTelcodeMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/IpInfosMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/MobileareaMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SdkOrderLogMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SolarAgentMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SolarChargeMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SolarMonitorMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SolarUserMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/StatStatusInfoMapper.xml" />
	    <mapper resource="com/zsyj/fee/mapping/SdkAccesslogMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/UserMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SdkUnknowAreaMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/AdvanceCompanyMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/AdvanceConfigMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SmsconfigInfoMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SdkSynurlLogMapper.xml" />
    	<mapper resource="com/zsyj/fee/mapping/SdkConfirmDialogAreaMapper.xml" />
	</mappers>
	
</configuration>