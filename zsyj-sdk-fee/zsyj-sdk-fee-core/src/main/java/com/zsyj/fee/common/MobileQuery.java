package com.zsyj.fee.common;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class MobileQuery {

	//set names utf8 更新环境变量编码设置
	
	//查询没有匹配到地区的号码信息
	//SELECT * from users where areaid = '0000' or areaID is null or telID is null or telID = '00';
	
	/*
	 * 
	 * 首先更新地区表里面的区号
	 * update mobilearea set provinceCode = ( SELECT code from cfg_area where mobilearea.province = name ) where provinceCode is null or provinceCode = '';

	   update mobilearea set areacode = ( SELECT city_code from cfg_city where mobilearea.city = city_name ) where areacode is null or areacode = '';
		
	   update solar_charge201206 set area = ( SELECT provinceCode from mobilearea where substring(solar_charge201206.mobile, 1, 7) = submobilenumber ) where area = '0000';	
		
	   update solar_charge201206 set city = ( SELECT areacode from mobilearea where substring(solar_charge201206.mobile, 1, 7) = submobilenumber ) where city = '00';
	 * 
	 * 更新没有匹配到的用户地区信息
	 * update users set 
		areaID = ( select provinceCode from mobilearea where SUBSTR(users.mobileNumber, 1, 7) = submobilenumber ),
		telID = ( select areacode from mobilearea where SUBSTR(users.mobileNumber, 1, 7) = submobilenumber ) 
		where areaID is null or telID is null or telID = '00'
	 */
	
	static Map<String, String> mobilePrefixMap = new HashMap<String, String> ();
	
	public static void main( String args [] ) throws IOException
	{
		String[] mobileArray = { 
				
				"18454307095",
				"18408443512",
				"18408449139",
				"18408444236",
				"18408449569",
				"18454498986",
				"18463528212",
				"18463529879",
				"18408443898",
				"18454023100",
				"18453034699",
				"18454051598",
				"18454072941",
				"18454052323",
				"18454475955",
				"18463547286",
				"18408438502",
				"18454431615",
				"18454072182",
				"18408492831",
				"18454072171",
				"18454023643",
				"18408901846",
				"18599265695",
				"18454014233",
				"18408468082",
				"18454455682",
				"18454070117",
				"18454058040",
				"18454001522",
				"18463548020",
				"18454003545",
				"18454002131",
				"18454090764",
				"18408468356",
				"18408460038",
				"18453009067",
				"18463227073",
				"18402920418",
				"18402912549",
				"18409189398",
				"18454049515",
				"18454455630",
				"18463531828",
				"18454078100",
				"18463525515",
				"18463538419",
				"18408449651",
				"18408446153",
				"18463568510",
				"18402930539",
				"18463515936",
				"18454462829",
				"18454021698",
				"18408468992",
				"18463511423",
				"18408496529",
				"18454045873",
				"18463532186",
				"18463002158",
				"18408467424",
				"18463516011",
				"18402920929",
				"18454465220",
				"18454048679",
				"18463567262",
				"18408460070",
				"18463504909",
				"18454479905",
				"18454412847",
				"18454038779",
				"18463011335",
				"18408446362",
				"18454444702",
				"18463547057",
				"18454004722",
				"18463016487",
				"18463514022",
				"18402920860",
				"18454002431",
				"18454058618",
				"18463002382",
				"18454090575",
				"18454055490",
				"18463011811",
				"18453044829",
				"18453014550",
				"18463540829",
				"18402953457",
				"18463503303",
				"18453034302",
				"18454035714",
				"18463002175",
				"18463003129",
				"18453017886",
				"18403404532",
				"18454007744",
				"18453052814",
				"18453063032",
				"18403401120",
				"18463210349",
				"18453034234",
				"18454409413",
				"18409189755",
				"18463220311",
				"18463517553",
				"18453043343",
				"15642832671",
				"18463356110",
				"18408661883",
				"18454427451",
				"18454076175",
				"18453053565",
				"18454045816",
				"18408478208",
				"18454426110",
				"18453061607",
				"18454093505",
				"18454092923",
				"18408491140",
				"18454026538",
				"18463000056",
				"18454498740",
				"18463529209",
				"18409547656",
				"18463521692",
				"18454088323",
				"18408472346",
				"18454044607",
				"18408660953",
				"18463352601",
				"18403413162",
				"18454073248",
				"18454091376",
				"18463561332",
				"18453034341",
				"18454065536",
				"18454144480",
				"18408494680",
				"18408669428",
				"18454034141",
				"18454004169",
				"18408668526",
				"18463513124",
				"18402937117",
				"18463545668",
				"18403409321",
				"18408437925",
				"18408432649",
				"18487505886",
				"18453053862",
				"18463342850",
				"18453009453",
				"18453055809",
				"18408431242",
				"18463322715",
				"18453045080",
				"18454053048",
				"18408437923",
				"18463530649",
				"18463524956",
				"18454004985",
				"18463141406",
				"18454091430",
				"18463273982",
				"18463561115",
				"18403423959",
				"18408441594",
				"18408432053",
				"18454036816",
				"18454026522",
				"18453007087",
				"18454459429",
				"18463214146",
				"18454104695",
				"18408471467",
				"18409186328",
				"18463517580",
				"18463000873",
				"18454104174",
				"18453024161",
				"18402927833",
				"18408665820",
				"18454054062",
				"18403403772",
				"18409544323",
				"18463216158",
				"18402926298",
				"18463530283",
				"18453196548",
				"18454188824",
				"18463508419",
				"18453062783",
				"18408666022",
				"18408445263",
				"18454034587",
				"18454088230",
				"18463325967",
				"18463318189",
				"18454022238",
				"18463352424",
				"18463557226",
				"18402936209",
				"18454030507",
				"18463311194",
				"18463236607",
				"18453034367",
				"18463359189",
				"18405418566",
				"18403420582",
				"18463529017",
				"18453074376",
				"18463349932",
				"18454316649",
				"18463345125",
				"18463346747",
				"18463510326",
				"18454306494",
				"18408468302",
				"18402931893",
				"18453076433",
				"18409540118",
				"18403403667",
				"18454336559",
				"18454471871",
				"18408470585",
				"18454314965",
				"18409540155",
				"18454312920",
				"18403423909",
				"18453049077",
				"18402934185",
				"18454317887",
				"18453060026",
				"18463087065",
				"18453134410",
				"18463314743",
				"18454010639",
				"18454319189",
				"18403414166",
				"18408473291",
				"18454473398",
				"18409543408",
				"18453009975",
				"18453031802",
				"18463501413",
				"18408462367",
				"18453005039",
				"18463567583",
				"18453040884",
				"18454078822",
				"18454480938",
				"18453131298",
				"18408663613",
				"18454447831",
				"18463501415",
				"18454313710",
				"18409189058",
				"18403403109",
				"18454028103",
				"18454123754",
				"18454053054",
				"18454482947",
				"18408916155",
				"18463356993",
				"18463274623",
				"18463315026",
				"18403403499",
				"18402908166",
				"18409183934",
				"18454062327",
				"18463018729",
				"18487916070",
				"18403416174",
				"18454051848",
				"18463231286",
				"18453013214",
				"18454082195",
				"18454077594",
				"18463567968",
				"18463266261",
				"18463013175",
				"18454071080",
				"18408440074",
				"18408453511",
				"18454188028",
				"18453002644",
				"18463264421",
				"18463321023",
				"18454093476",
				"18403427478",
				"18453022995",
				"18487915608",
				"18408452180",
				"18463575285",
				"18403401246",
				"18409547847",
				"18454313416",
				"18454045616",
				"18453138711",
				"18454318472",
				"18453075395",
				"18408493049",
				"18402967043",
				"18402951970",
				"18453071012",
				"18463104869",
				"18453075514",
				"18454184211",
				"18487506526",
				"18463005080",
				"18463356173",
				"18453079132",
				"18454183033",
				"18454157801",
				"18487920530",
				"18408438513",
				"18453027756",
				"18463145257",
				"18408631033",
				"18463577780",
				"18454084551",
				"18463568092",
				"18454444202",
				"18409189271",
				"18454312606",
				"18453041292",
				"18463003715",
				"18405416822",
				"18453076806",
				"18463533698",
				"18454456173",
				"18408477264",
				"18454036327",
				"18403412194",
				"18463509875",
				"18463145679",
				"18454498645",
				"18454462253",
				"18454331412",
				"18453077664",
				"18454427623",
				"18454031945",
				"18463128135",
				"18409548862",
				"18408635593",
				"18454140780",
				"18463357633",
				"18463332597",
				"18454062404",
				"18453157233",
				"18454182801",
				"18463355156",
				"18435701093",
				"18453005796",
				"18454316863",
				"18463229412",
				"18451560548",
				"18451530513",
				"18463145154",
				"18408921053",
				"18409549422",
				"18463513288",
				"18403414239",
				"18463226365",
				"18453031014",
				"18454005890",
				"18405416826",
				"18408464972",
				"18463358174",
				"18408921344",
				"18453032586",
				"18463322657",
				"18454816867",
				"18453004490",
				"18463253954",
				"18463312795",
				"18454073647",
				"18454345619",
				"18463353136",
				"18454317264",
				"18454028537",
				"18454462961",
				"18408633581",
				"18409547855",
				"18454007517",
				"18454182585",
				"18405416843",
				"18454051677",
				"18408432085",
				"18454032721",
				"18454192446",
				"18454422783",
				"18403439604",
				"18463352758",
				"18402967786",
				"18463330716",
				"18463534895",
				"18454010582",
				"18409544574",
				"18409548225",
				"18453074710",
				"18435707790",
				"18408660564",
				"18454037868",
				"18463339754",
				"18453014986",
				"18463326236",
				"18403435376",
				"18453354496",
				"18453052518",
				"18487509354",
				"18454007128",
				"18463329228",
				"18454035941",
				"18453137996",
				"18487914027",
				"18463559770",
				"18408464994",
				"18454056182",
				"18454310146",
				"18408491669",
				"18463234525",
				"18409641154",
				"18453070255",
				"18402924518",
				"18454033816",
				"18463231700",
				"18463211193",
				"18453036617",
				"18453148175",
				"18463250836",
				"18463141639",
				"18403405657",
				"18451562316",
				"18463506900",
				"18409543343",
				"18454195359",
				"18463554391",
				"18454042869",
				"18481205949",
				"18403434571",
				"18453051152",
				"18463576993",
				"18408217177",
				"18463219759",
				"18408460209",
				"18453130981",
				"18453034621",
				"18454465325",
				"18463263562",
				"18454048770",
				"18454070965",
				"18453123202",
				"18463264746",
				"18454348861",
				"18463272265",
				"18453199432",
				"18402965294",
				"18402965273",
				"18463009769",
				"18463216771",
				"15642836877",
				"18453350878",
				"18454828311",
				"18453106891",
				"18403434596",
				"18453120981",
				"18453077024",
				"18403435096",
				"18451565828",
				"18408800961",
				"18408462923",
				"18216758881",
				"18409220035",
				"18216769686",
				"18454010301",
				"15771221312",
				"18583609969",
				"15769980478",
				"18375188300",
				"18293343038",
				"18408926832",
				"18302332831",
				"18580756915",
				"18216724092",
				"18454421462",
				"18634442952",
				"18403438331",
				"18302335635",
				"15705585309",
				"18646158659",
				"18408923491",
				"18409541476",
				"18451321486",
				"18293839788",
				"18338831203",
				"18830471457",
				"18451586596",
				"18380225735"
				
				
		}; 
		
		String sb = null;
		File fileWriter = new File( "d://work//mobileQuery.txt"   );
		if( !fileWriter.exists() ) {
			fileWriter.createNewFile();
		}
		
		BufferedWriter  bfWriter = new BufferedWriter( new FileWriter( fileWriter ) );
		
		for( String mobile : mobileArray )
		{
			String mobilePrefix = mobile.substring( 0, 7 );
			if( mobilePrefixMap.get( mobilePrefix ) != null ) {
				continue;
			}else{
				mobilePrefixMap.put(mobilePrefix, mobile);
			}
			sb = "insert into mobilearea( submobilenumber, province, city, cardtype, tronetype ) values(";
			String[] strArray = MobileQuery.getCity( mobile );
			sb += "'" + mobilePrefix + "', ";
			
			for( String str : strArray )
			{
				sb += " '" + str + "',";
			}
			
			sb = sb.substring(0, sb.length() - 1) + ");";
			
			bfWriter.write( sb + "\r\n");
		}
		
		bfWriter.close();
	}
	
	public static String[] getCity(String mobile){
		
		//String pageURL="http://www.ip138.com:8080/search.asp?action=mobile&mobile="+mobile;
		String pageURL="http://www.baidu.com/s?bs="+mobile+"&f=8&wd="+mobile+"&n=3";
		String[] city=new String[]{"","","",""};
		HttpURLConnection urlConn=null;
		BufferedReader br =null;
		try {
			   URL url = new URL(pageURL);
			   HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			   connection.setRequestProperty("User-Agent", "MSIE 7.0");
			   br = new BufferedReader(new InputStreamReader(
			   connection.getInputStream(), "UTF-8"));
			   String line = null;
			   while ((line = br.readLine()) != null) {
				   //<span>手机号码&quot;13751180190&quot;</span> <span>广东&nbsp;深圳&nbsp;&nbsp;中国移动 GSM</span>
				   //System.out.println("aaaaa="+line);
				   
				   if(line.indexOf("span>手机号码")>-1){
					   
				    	String tempInfo=line.substring(line.indexOf("span>手机号码")+9,line.length());
				    	
				    	String info=tempInfo.substring(tempInfo.indexOf("<span>")+6);
				    	
				    	info = info.substring( 0, info.indexOf("</span>") );
				    	
				    	if(info.indexOf("&nbsp;")>-1){
				    		
				    		String[] temp=info.split("&nbsp;");
				    		city[0]=temp[0];
					    	city[1]=temp[1];//System.out.println(city[0]+"===="+city[1]);
					    	
					    	if( temp.length >= 3 )
					    	{
					    		city[2] = temp[3];
					    		if( temp[3].indexOf( "移动" ) > -1 )
					    		{
					    			city[3]="CMCC";	
					    		}
					    		else if( temp[3].indexOf( "联通" ) > -1 )
					    		{
					    			city[3]="CU";
					    		}
					    	}
				
					    	
					    	city[1]=city[1].replace("n", "").replace("b", "")
					    				   .replace("s", "").replace("p", "").replace("&", "");
					    	
					    	city[2]=city[2].replace("n", "").replace("b", "")
		    				   .replace("s", "").replace("p", "").replace("&", "");
					    	
					    	if("".equals(city[0]) && !"".equals(city[1])){
					    		city[0]=city[1];
					    	}
				    	}
				    	else{
				    		//System.out.println("AAA"+info+"AAA");
				    	}
				    }
			   }
			   connection.disconnect();
			   br.close();
			  } catch (Exception e) {
			   e.printStackTrace();
			  }
		return city;
	}
	
}
