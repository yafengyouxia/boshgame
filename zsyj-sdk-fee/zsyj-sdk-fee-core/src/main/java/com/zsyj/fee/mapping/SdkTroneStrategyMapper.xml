<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zsyj.fee.dao.SdkTroneStrategyMapper" >
  <resultMap id="BaseResultMap" type="com.zsyj.fee.entity.SdkTroneStrategy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="master_id" property="masterId" jdbcType="INTEGER" />
    <result column="sp_id" property="spId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="area_code" property="areaCode" jdbcType="VARCHAR" />
    <result column="divide_ratio" property="divideRatio" jdbcType="DOUBLE" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, master_id, sp_id, name, area_code, divide_ratio, type, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zsyj.fee.entity.SdkTroneStrategyCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cfg_sdk_trone_strategy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cfg_sdk_trone_strategy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cfg_sdk_trone_strategy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsyj.fee.entity.SdkTroneStrategyCondition" >
    delete from cfg_sdk_trone_strategy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsyj.fee.entity.SdkTroneStrategy" >
    insert into cfg_sdk_trone_strategy (id, master_id, sp_id, 
      name, area_code, divide_ratio, 
      type, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{masterId,jdbcType=INTEGER}, #{spId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, #{divideRatio,jdbcType=DOUBLE}, 
      #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zsyj.fee.entity.SdkTroneStrategy" >
    insert into cfg_sdk_trone_strategy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="masterId != null" >
        master_id,
      </if>
      <if test="spId != null" >
        sp_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="areaCode != null" >
        area_code,
      </if>
      <if test="divideRatio != null" >
        divide_ratio,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="masterId != null" >
        #{masterId,jdbcType=INTEGER},
      </if>
      <if test="spId != null" >
        #{spId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="divideRatio != null" >
        #{divideRatio,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsyj.fee.entity.SdkTroneStrategyCondition" resultType="java.lang.Integer" >
    select count(*) from cfg_sdk_trone_strategy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cfg_sdk_trone_strategy
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.masterId != null" >
        master_id = #{record.masterId,jdbcType=INTEGER},
      </if>
      <if test="record.spId != null" >
        sp_id = #{record.spId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null" >
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.divideRatio != null" >
        divide_ratio = #{record.divideRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cfg_sdk_trone_strategy
    set id = #{record.id,jdbcType=INTEGER},
      master_id = #{record.masterId,jdbcType=INTEGER},
      sp_id = #{record.spId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      divide_ratio = #{record.divideRatio,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsyj.fee.entity.SdkTroneStrategy" >
    update cfg_sdk_trone_strategy
    <set >
      <if test="masterId != null" >
        master_id = #{masterId,jdbcType=INTEGER},
      </if>
      <if test="spId != null" >
        sp_id = #{spId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="divideRatio != null" >
        divide_ratio = #{divideRatio,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsyj.fee.entity.SdkTroneStrategy" >
    update cfg_sdk_trone_strategy
    set master_id = #{masterId,jdbcType=INTEGER},
      sp_id = #{spId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      divide_ratio = #{divideRatio,jdbcType=DOUBLE},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>